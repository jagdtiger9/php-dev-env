version: "3"
volumes:
    # Путь к БД redis
    redis:
    # Pinba DB
    pinba:
    # Pinboard web
    pinboard:
    # Nodejs
    nodejs:

services:
    nginx:
        build:
            context: ../../images/nginx
        image: nginx
        container_name: nginx
        volumes:
            - ${MP_WEB}:/var/www/magicpro:ro
            - ${HOSTS_CONF}:/etc/nginx/conf.d:ro
            - ${HOSTS_WEB}:/var/www/hosts:ro
        #command: [nginx-debug, '-g', 'daemon off;']
        command: [nginx, '-g', 'daemon off;']
        ports:
            - "80:80"
        networks:
            - net
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "nginx"

    fpm:
        build:
            context: ../../images/php/serv
            dockerfile: ./php-fpm/Dockerfile
            args:
                # build context only
                php_version: ${PHP_VERSION:-7.3}
                allow_xdebug: ${ALLOW_XDEBUG:-1}
        container_name: php-fpm
        environment:
            # service container environment
            - PHP_VERSION=${PHP_VERSION:-7.3}
            - XDEBUG_PORT=${XDEBUG_PORT:-9001}
        volumes:
            - ${MP_WEB}:/var/www/magicpro
            - ${HOSTS_WEB}:/var/www/hosts
            - ${DATA_XDEBUG}:/tmp/xdebug
        ports:
            - "9000:9000"
        networks:
            - net
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "php-fpm"

    crontab:
        build:
            context: ../../images/php/serv
            dockerfile: ./php-cron/Dockerfile
            args:
                - php_version=${PHP_VERSION:-7.3}
                - allow_xdebug=${ALLOW_XDEBUG:-1}
        container_name: php-cron
        environment:
            PHP_VERSION: ${PHP_VERSION:-7.3}
            XDEBUG_PORT: ${XDEBUG_PORT:-9001}
        volumes:
            - ${MP_WEB}:/var/www
            - ${DATA_XDEBUG}:/tmp/xdebug
        networks:
            - net
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "php-cron"

    db:
        build:
            context: ../../images/percona
        image: percona:5.7
        container_name: percona_db
        volumes:
            - ${DATA_MYSQL}:/var/lib/mysql
        ports:
            - "11212:11212"
            - "3306:3306"
            - "9999:9999"
            - "9998:9998"
        links:
            - logger
        networks:
            net:
                ipv4_address: 192.168.17.33
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_REPL_USER: ${MYSQL_REPL_USER}
            MYSQL_REPL_PASS: ${MYSQL_REPL_PASS}
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "percona"

    tarantool:
        build:
            context: ../../images/tarantool
        container_name: tarantool
        volumes:
            - ${DATA_TARANTOOL}:/var/lib/tarantool
        ports:
            - "3301:3301"
        networks:
            - net
        environment:
            TARANTOOL_USER_NAME: ${TARANTOOL_USER_NAME}
            TARANTOOL_USER_PASS: ${TARANTOOL_USER_PASS}
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "tarantool"

    # https://github.com/basis-company/tarantool-admin
    tarantool-admin:
        image: quay.io/basis-company/tarantool-admin
        container_name: tarantool-admin
        volumes:
            - ${DATA_TARANTOOL}:/var/lib/tarantool
        ports:
            - "8090:80"
        networks:
            - net
        environment:
            TARANTOOL_USER_NAME: ${TARANTOOL_USER_NAME}
            TARANTOOL_USER_PASS: ${TARANTOOL_USER_PASS}
            TARANTOOL_CONNECTIONS_READONLY: 0
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "tarantool-admin"

    mysql-tarantool-replication:
        build:
            context: ../../images/mysql-tarantool
        container_name: mysql-tarantool-replication
        networks:
            - net
        environment:
            TARANTOOL_USER_NAME: ${TARANTOOL_USER_NAME}
            TARANTOOL_USER_PASS: ${TARANTOOL_USER_PASS}
            MYSQL_REPL_USER: ${MYSQL_REPL_USER}
            MYSQL_REPL_PASS: ${MYSQL_REPL_PASS}
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "mysql-tarantool-replication"

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        links:
            - db:db
        ports:
            - "8081:80"
        networks:
            - net
        environment:
            MYSQL_USERNAME: root
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            UPLOAD_LIMIT: ${UPLOAD_LIMIT}
        restart: unless-stopped

    memcached:
        image: memcached
        container_name: memcached
        ports:
            - "11211:11211"
        networks:
            - net
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "memcached"

    redis:
        build:
            context: ../../images/redis
        image: redis
        container_name: redis
        volumes:
            - ${DATA_REDIS}:/tmp/redis
        ports:
            - "6379:6379"
        networks:
            - net
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "redis"

    phpredadmin:
        image: faktiva/php-redis-admin
        container_name: phpredadmin
        environment:
            - PHPREDMIN_DATABASE_REDIS_0_HOST=redis
        ports:
            - "8082:80"
        depends_on:
            - redis
        networks:
            - net
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "phpredadmin"

    sphinx:
        build:
            context: ../../images/sphinx
        container_name: sphinx
        depends_on:
          - "db"
        volumes:
            - ${MP_WEB}:/var/www/magicpro:ro
            - ${DATA_SPHINX}:/var/lib/sphinxsearch/data
        ports:
            - "9312:9312"
            - "9306:9306"
        networks:
            - net
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "sphinx"

    elastic: # sudo sysctl -w vm.max_map_count=262144
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
        container_name: elastic
        environment:
            - node.name=es01
            - cluster.name=es-docker-cluster
            - cluster.initial_master_nodes=es01
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200"
        networks:
            - net
        depends_on:
            - "db"
        volumes:
            - ${MP_WEB}:/var/www/magicpro:ro
            - ${DATA_ELASTIC}:/usr/share/elasticsearch/data
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "elastic"

    nodejs:
        build:
            context: ../../images/nodejs
        container_name: nodejs
        ports:
            - "8085:8085"
            - "8086:8086"
            - "1333:1333"
        networks:
            - net
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "nodejs"

    pinba:
        build:
            context: ../../images/pinba
        image: tony2001/pinba
        container_name: pinba
        volumes:
            - pinba:/local/mysql/data
        ports:
            - "30002:30002/udp"
            - "3006:3306"
        networks:
            - net
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            PINBA_STATS_GATHERING_PERIOD: 10000
            PINBA_STATS_HISTORY: 300
            PINBA_TEMP_POOL_SIZE: 10000
            PINBA_REQUEST_POOL_SIZE: 1000000
            #PINBA_HISTOGRAM_MAX_TIME
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "pinba"

    pinboard:
        build:
            context: ../../images/pinboard
        container_name: pinboard
        volumes:
            - pinboard:/www
        ports:
            - "8084:8080"
        networks:
            - net
        environment:
            MYSQL_HOST: "pinba"
            MYSQL_USER: "root"
            MYSQL_PASSWORD: ""
            AGGREGATION_PERIOD: 5
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "pinboard"

    # https://github.com/dunglas/mercure
    mercure:
        image: dunglas/mercure
        container_name: mercure
        volumes:
            - ${MERCURE_CONFIG}:/etc/caddy/Caddyfile
        environment:
            - JWT_KEY=${MERCURE_KEY}
            - MERCURE_PUBLISHER_JWT_KEY=${MERCURE_KEY}
            - MERCURE_SUBSCRIBER_JWT_KEY=${MERCURE_KEY}
            - CORS_ALLOWED_ORIGINS=http://magicpro,http://localhost,http://mercure
            #- DEBUG=1
            - ADDR=mercure:8088
            #- PUBLISH_ALLOWED_ORIGINS=*
            - PUBLISH_ALLOWED_ORIGINS=http://magicpro,http://localhost,http://mercure
            #- ACME_HOSTS=http://magicpro,http://localhost
        ports:
            - "8088:8088"
            - "8443:8443"
        links:
            - logger
        networks:
            - net
        restart: unless-stopped
        logging:
            driver: "syslog"
            options:
                syslog-address: "udp://127.0.0.1:5514"
                syslog-facility: "daemon"
                tag: "mercure"

    logger:
        build:
            context: ../../images/rsyslog
        container_name: logger
        volumes:
            - ${LOG_DIR}:/var/log
        ports:
            - "127.0.0.1:5514:514/udp"
        networks:
            - net
        restart: unless-stopped

networks:
    net:
#        name: dockerNet
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 192.168.17.1/24
